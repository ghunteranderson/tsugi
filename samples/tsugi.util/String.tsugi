class String:

    private Character[] value

    init(Character[] characters):
        value = characters

    method String trim():
        var first = 0
        var last = value.length-1

        while first < last && StirngUtils.isWhiteSpace(value[first])) then first++
        while last > first && StirngUtils.isWhiteSpace(value[last]) then last--

        return subString(first, last)

    method String subString(Integer first, Integer last):
        if first < 0:
            throw new BadArgumentException("First index cannot be negative")
        if last > string.length:
            throw new BadArgumentException("Last index cannot be larger than the string")
        if last < first:
            throw BadArgumentException("Last index cannot be less than the first")

        var array = new Character[last-first+1]
        var a = 0
        var b = first
        while b <= last:
            array[a] = value[b]
            a++
            b++
        return new String(array)
